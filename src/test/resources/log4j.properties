#log4j参数配置
#Log4j输出级别的种类
#ERROR、WARN、INFO、DEBUG
#ERROR 为严重错误 主要是程序的错误
#WARN 为一般警告，比如session丢失
#INFO 为一般要显示的信息，比如登录登出
#DEBUG 为程序的调试信息

############################################
#应用服务的默认日志级别和输出配置
############################################
log4j.rootCategory= INFO, stdout, R
log4j.logger.[Mybatis-3.4.1]com.zfsoft = DEBUG

############################################
#额外指导其他的包或类的日志记录级别
############################################
#JDBC日志级别
log4j.logger.java.sql=WARN
log4j.logger.java.sql.Connection=WARN
log4j.logger.java.sql.Statement=WARN
log4j.logger.java.sql.PreparedStatement=WARN
log4j.logger.java.sql.ResultSet=WARN
#Druid日志级别
log4j.logger.druid.sql=INFO
#log4j.logger.druid.sql.DataSource=DEBUG
#log4j.logger.druid.sql.Connection=ERROR
#log4j.logger.druid.sql.Statement=DEBUG
#log4j.logger.druid.sql.ResultSet=ERROR
#开源组件日志级别
log4j.logger.org.apache=WARN
log4j.logger.org.springframework=WARN
log4j.logger.org.springmodules=WARN
log4j.logger.org.jbpm=WARN
log4j.logger.com.opensymphony=WARN
log4j.logger.com.opensymphony.xwork2=WARN
#log4j.logger.com.opensymphony.webwork=DEBUG
log4j.logger.org.mybatis=WARN
log4j.logger.org.apache.ibatis=WARN 
log4j.logger.org.hibernate=WARN
########################################################################################
# 控制台输出日志：ConsoleAppender
########################################################################################
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[ZFTAL][%p][%t] %d{yyyy-MM-dd HH:mm:ss.SSS} [%C:%M:%L] %m%n

########################################################################################
# 每天产生一个日志文件：DailyRollingFileAppender
########################################################################################
log4j.appender.R=org.apache.log4j.DailyRollingFileAppender
#默认为true，添加到末尾，false在每次启动时进行覆盖
log4j.appender.R.Append = true 
#直接输出，不进行缓存
log4j.appender.R.ImmediateFlush = true
#文件名称的格式
#'.'yyyy-MM: 每个月更新一个log日志
#'.'yyyy-ww: 每个星期更新一个log日志
#'.'yyyy-MM-dd: 每天更新一个log日志
#'.'yyyy-MM-dd-a: 每天的午夜和正午更新一个log日志
#'.'yyyy-MM-dd-HH: 每小时更新一个log日志
#'.'yyyy-MM-dd-HH-mm: 每分钟更新一个log日志
log4j.appender.R.DatePattern = '.'yyyy-MM-dd'.log' 
log4j.appender.R.File=${catalina.home}/logs/zftal_jwglxt.log
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=[ZFTAL][%p][%t] %d{yyyy-MM-dd HH:mm:ss.SSS} [%C:%M:%L] %m%n

########################################################################################
# 滚动文件输出：RollingFileAppender
########################################################################################
#log4j.appender.A1=org.apache.log4j.RollingFileAppender
#每个log文件的大小，KB、MB、GB表示. 在日志文件到达该大小时，将会自动滚动，即将原来的内容移到chenya.html.1文件。
#log4j.appender.A1.MaxFileSize=5120KB
#最多保存3个滚动文件备份（chenya.html.1、chenya.html.2、chenya.html.3）
#log4j.appender.A1.MaxBackupIndex=20
# 输出以上的INFO信息 
#log4j.appender.A1.Threshold = DEBUG 
#保存log文件路径 
#log4j.appender.A1.File=${catalina.home}/logs/zftal_jwglxt.log
#输出文件的格式 
############################## PatternLayout ###################################
#log4j.appender.A1.layout = org.apache.log4j.PatternLayout
#log4j.appender.A1.layout.ConversionPattern = [ZFTAL][%p][%t] %d{yyyy-MM-dd HH:mm:ss.SSS} [%C:%M:%L] %m%n
############################## HTMLLayout  ####################################
#log4j.appender.A1.layout=org.apache.log4j.HTMLLayout 
#log4j.appender.A1.layout.Title =  
############################## SampleLayout ####################################
#log4j.appender.A1.layout = org.apache.log4j.SampleLayout
############################## XMLLayout #######################################
#log4j.appender.A1.layout = org.apache.log4j.XMLLayout
#log4j.appender.A1.layout.LocationInfo = true #是否显示类名和行数
############################## TTCCLayout ######################################
#log4j.appender.A1.layout = org.apache.log4j.TTCCLayout
#log4j.appender.A1.layout.DateFormat = ISO8601
#NULL, RELATIVE, ABSOLUTE, DATE or ISO8601.
#log4j.appender.A1.layout.TimeZoneID = GMT - 8 : 00 
#log4j.appender.A1.layout.CategoryPrefixing = false ##默认为true 打印类别名
#log4j.appender.A1.layout.ContextPrinting = false ##默认为true 打印上下文信息
#log4j.appender.A1.layout.ThreadPrinting = false ##默认为true 打印线程名

############################################
# 将错误日志发送到Email：SMTPAppender
# 需要依赖jar支持：
# 下载JavaMail和JAF,
#  http://java.sun.com/j2ee/ja/javamail/index.html
#  http://java.sun.com/beans/glasgow/jaf.html
# 在项目中引用mail.jar和activation.jar。
############################################
#log4j.logger.MailLog=ERROR,mailout
#log4j.appender.mailout=org.apache.log4j.net.SMTPAppender
#log4j.appender.mailout.BufferSize=5
#log4j.appender.mailout.To=zfsoft@163.com
#log4j.appender.mailout.From=zfsoft@163.com
#log4j.appender.mailout.Subject=ErrorLog
#log4j.appender.mailout.SMTPHost=smtp.163.net
#log4j.appender.mailout.layout=org.apache.log4j.PatternLayout
#log4j.appender.mailout.layout.ConversionPattern=[ZFTAL][%p][%t] %d{yyyy-MM-dd HH:mm:ss.SSS} [%C:%M:%L] %m%n
 
 